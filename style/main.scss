body {
	font-family: sans-serif;
	display: flex;
	min-height: 100vh;
	margin: 0;
	position: absolute;
	background: transparent;
}

#overlay {
	text-align: center;
	justify-content: center;
	align-items: center;
}

#canvas {
	position: absolute;
	top: 0;
	left: 0;
}

/* Basic Card Styles */
.card {
	width: 300px;
	padding: 20px;
	margin: 20px;
	border-radius: 8px;
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
	background-color: #fff;
}

/* Card Title Styles */
.card h2 {
	font-size: 1.5em;
	color: #333;
}

/* Card Content Styles */
.card p {
	font-size: 1em;
	color: #666;
}

/* Card Image Styles (if applicable) */
.card img {
	max-width: 100%;
	height: auto;
	border-radius: 4px;
}

/* Hover Effect (Optional) */
.card:hover {
	box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
	transform: translateY(-4px);
	transition: box-shadow 0.3s, transform 0.3s;
}

/* Basic Button Styles */
.button {
	position: relative;
	display: inline-block;
	box-sizing: border-box;
	border: none;
	border-radius: 4px;
	padding: 0 0px;
	min-width: 100px;
	height: 36px;
	vertical-align: middle;
	text-align: center;
	text-overflow: ellipsis;
	text-transform: uppercase;
	color: rgb(var(--pure-material-onprimary-rgb, 255, 255, 255));
	background-color: rgb(var(--pure-material-primary-rgb, 33, 150, 243));
	box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
	font-family: var(--pure-material-font, "Roboto", "Segoe UI", BlinkMacSystemFont, system-ui, -apple-system);
	font-size: 14px;
	font-weight: 500;
	line-height: 36px;
	overflow: hidden;
	outline: none;
	cursor: pointer;
	transition: box-shadow 0.2s;
}

.button::-moz-focus-inner {
	border: none;
}

select {
	width: 150px;
	/* Adjust width as needed */
	padding: 8px;
	font-size: 14px;
}

/* Overlay */
.button::before {
	content: "";
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background-color: rgb(var(--pure-material-onprimary-rgb, 255, 255, 255));
	opacity: 0;
	transition: opacity 0.2s;
}

/* Ripple */
.button::after {
	content: "";
	position: absolute;
	left: 50%;
	top: 50%;
	border-radius: 50%;
	padding: 50%;
	width: 32px;
	/* Safari */
	height: 32px;
	/* Safari */
	background-color: rgb(var(--pure-material-onprimary-rgb, 255, 255, 255));
	opacity: 0;
	transform: translate(-50%, -50%) scale(1);
	transition: opacity 1s, transform 0.5s;
}

/* Hover, Focus */
.button:hover,
.button:focus {
	box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
}

.button:hover::before {
	opacity: 0.08;
}

.button:focus::before {
	opacity: 0.24;
}

.button:hover:focus::before {
	opacity: 0.3;
}

/* Active */
.button:active {
	box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.button:active::after {
	opacity: 0.32;
	transform: translate(-50%, -50%) scale(0);
	transition: transform 0s;
}

/* Disabled */
.button:disabled {
	color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.38);
	background-color: rgba(var(--pure-material-onsurface-rgb, 0, 0, 0), 0.12);
	box-shadow: none;
	cursor: initial;
}

.button:disabled::before {
	opacity: 0;
}

.button:disabled::after {
	opacity: 0;
}

/* Square Card Styles */
.square-card {
	position: relative;
	width: 60px;
	/* Default width */
	height: 100px;
	/* Default height */
	border-radius: 8px;
	overflow: hidden;
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
	transition: box-shadow 0.3s;
}

/* Card Image Styles */
.square-card .img {
	width: 100%;
	height: 80%;
	object-fit: fill;
	/* Ensure the image covers the entire card */
}

/* Icon Styles */
.square-card .icon {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	font-size: 2em;
	color: #fff;
	/* Icon color */
}

.square-card .label {
	position: absolute;
	top: 90%;
	left: 50%;
	transform: translate(-50%, -50%);
	font-size: 1em;
	color: #000;
	/* Icon color */
}

/* Hover Effect (Optional) */
.square-card:hover {
	box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
	transition: box-shadow 0.3s;
}

/* Container for the Grid */
.grid-container {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(calc(50% / 8), 1fr));
	// grid-template-columns: repeat(8, minmax(min(100%, 8rem), 1fr));
	// grid-template-rows: repeat(8, minmax(min(100%, 8rem), 1fr));
	gap: 10px;
	/* Adjust the gap between cards */
}

/* Container for the Grid */
.grid-container-16 {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(calc(50% / 16), 1fr));
	// grid-template-columns: repeat(8, minmax(min(100%, 8rem), 1fr));
	// grid-template-rows: repeat(8, minmax(min(100%, 8rem), 1fr));
	gap: 5px;
	/* Adjust the gap between cards */
}